# This is a basic workflow to help you get started with Actions

name: env-win

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    paths: 
      - '.github/workflows/context-env.yml'
  pull_request:
    paths: 
      - '.github/workflows/context-env.yml'
# 全局环境变量，本yml中所有jobs和steps都可以使用
env: 
  globle_env: ge111
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    # job的环境变量，此job下的所有steps都可以用
    env:
      job_env1: je111

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!
    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
    - name: set env
      id: set-env
      # step环境变量，只能当前step使用
      env: 
        env1: e111
      run: |
        echo "globle_env:${{ env.globle_env }}"
        echo "job_env1:${{ env.job_env1 }}"
        echo "env1:${{ env.env1 }}"
        echo "::set-env name=dynamec_env2::de222"
        echo "::set-output name=out1::o111"
    # 使用表达式语法${{}}访问env上下文,不同shell访问上下文都是使用表达式语法${{}}
    # Windows 默认shell是powershell
    - name: get env powershell
      id: get-env
      run: |
        echo "globle_env:${{ env.globle_env }}"
        echo "job_env1:${{ env.job_env1 }}"
        echo "dynamec_env2:${{ env.dynamec_env2 }}"
        echo "get output out1:${{ steps.set-env.outputs.out1 }}"
    - name: get env bash
      shell: bash
      run: |
        echo "globle_env:${{ env.globle_env }}"
        echo "job_env1:$job_env1"
        echo "dynamec_env2:$dynamec_env2"
        echo "get output out1:${{ steps.set-env.outputs.out1 }}"
    - name: get env cmd
      shell: cmd
      run: |
        echo globle_env:${{ env.globle_env }}
        echo "job_env1:${{ env.job_env1 }}"
        echo "dynamec_env2:${{ env.dynamec_env2 }}"
        echo "get output out1:${{ steps.set-env.outputs.out1 }}"
    - name: get env pwsh
      shell: pwsh
      run: |
        echo globle_env:${{ env.globle_env }}
        echo "job_env1:${{ env.job_env1 }}"
        echo "dynamec_env2:${{ env.dynamec_env2 }}"
        echo "get output out1:${{ steps.set-env.outputs.out1 }}"
    # 除了env还有其它上下文：https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
    - name: get some context
      run: |
        echo github:${{ toJson(github) }}
        echo job:${{ toJson(job) }}
        echo steps:${{ toJson(steps) }}
        echo runner:${{ toJson(runner) }}
        echo strategy:${{ toJson(strategy) }}
        echo matrix:${{ toJson(matrix) }}
        
        echo github.workspace:${{ github.workspace }}
        echo github.ref:${{ github.ref }}
        echo github.sha:${{ github.sha }}
        echo github.action:${{ github.action }}
        echo github.workspace:${{ github.workspace }}
        echo github.workspace:${{ github.workspace }}
    # 默认环境变量，注意不同shell访问默认环境变量的方式不同
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
    # 注意默认环境变量和上下文env是不同的概念，也是不同的访问方式
    - name: def env bash
      shell: bash
      run: |
        echo "HOME:$HOME"
        echo "GITHUB_WORKFLOW:$GITHUB_WORKFLOW"
        echo "GITHUB_ACTOR:$GITHUB_ACTOR"
        echo "GITHUB_REPOSITORY:$GITHUB_REPOSITORY"
        echo "GITHUB_EVENT_NAME:$GITHUB_EVENT_NAME"
        echo "GITHUB_WORKSPACE:$GITHUB_WORKSPACE"
        echo "GITHUB_SHA:$GITHUB_SHA"
        echo "GITHUB_REF:$GITHUB_REF"
    - name: def env cmd
      shell: cmd
      run: |
        echo "HOME:%HOME%"
        echo "GITHUB_WORKFLOW:%GITHUB_WORKFLOW%"
        echo "GITHUB_ACTOR:%GITHUB_ACTOR%"
        echo "GITHUB_REPOSITORY:%GITHUB_REPOSITORY%"
        echo "GITHUB_EVENT_NAME:%GITHUB_EVENT_NAME%"
        echo "GITHUB_WORKSPACE:%GITHUB_WORKSPACE%"
        echo "GITHUB_SHA:%GITHUB_SHA%"
        echo "GITHUB_REF:%GITHUB_REF%"
    - name: def env powershell
      shell: powershell
      run: |
        echo "HOME:$env:HOME"
        echo "GITHUB_WORKFLOW:$env:GITHUB_WORKFLOW"
        echo "GITHUB_ACTOR:$env:GITHUB_ACTOR"
        echo "GITHUB_REPOSITORY:$env:GITHUB_REPOSITORY"
        echo "GITHUB_EVENT_NAME:$env:GITHUB_EVENT_NAME"
        echo "GITHUB_WORKSPACE:$env:GITHUB_WORKSPACE"
        echo "GITHUB_SHA:$env:GITHUB_SHA"
        echo "GITHUB_REF:$env:GITHUB_REF"
